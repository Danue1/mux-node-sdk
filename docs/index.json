[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/data/data.js",
    "content": "/*!\n * Mux Data\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst Metrics = require('../../src/data/resources/metrics');\nconst Errors = require('../../src/data/resources/errors');\nconst Filters = require('../../src/data/resources/filters');\nconst Exports = require('../../src/data/resources/exports');\nconst VideoViews = require('../../src/data/resources/video_views');\n\n/**\n * @ignore\n * Data Class - Provides access to the Mux Data API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n */\nclass Data {\n  /**\n   * Data Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /** @type {Metrics} */\n    this.metrics = new Metrics(accessToken, secret);\n\n    /** @type {Errors} */\n    this.errors = new Errors(accessToken, secret);\n\n    /** @type {Filters} */\n    this.filters = new Filters(accessToken, secret);\n\n    /** @type {Exports} */\n    this.exports = new Exports(accessToken, secret);\n\n    /** @type {VideoViews} */\n    this.videoViews = new VideoViews(accessToken, secret);\n  }\n}\n\nmodule.exports = Data;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/data.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Data",
    "memberof": "src/data/data.js",
    "static": true,
    "longname": "src/data/data.js~Data",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/data.js",
    "importStyle": "Data",
    "description": "",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;"
    ],
    "lineNumber": 21,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/data.js~Data",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/data.js~Data#constructor",
    "access": "public",
    "description": "Data Constructor",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API secret"
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "metrics",
    "memberof": "src/data/data.js~Data",
    "static": false,
    "longname": "src/data/data.js~Data#metrics",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Metrics"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "errors",
    "memberof": "src/data/data.js~Data",
    "static": false,
    "longname": "src/data/data.js~Data#errors",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Errors"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "filters",
    "memberof": "src/data/data.js~Data",
    "static": false,
    "longname": "src/data/data.js~Data#filters",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Filters"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "exports",
    "memberof": "src/data/data.js~Data",
    "static": false,
    "longname": "src/data/data.js~Data#exports",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Exports"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "videoViews",
    "memberof": "src/data/data.js~Data",
    "static": false,
    "longname": "src/data/data.js~Data#videoViews",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "VideoViews"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/data/resources/errors.js",
    "content": "/*!\n * Mux Errors\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base errors path for the Mux API\n * */\nconst PATH = '/data/v1/errors';\n\n/**\n * Errors Class - Provides access to the Mux Data Errors API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n * // Returns a list of playback errors filtered by the windows operating system\n * Data.errors.list({ filters: ['operating_system:windows'] });\n */\nclass Errors {\n  /**\n   * @ignore\n   * Errors Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Returns a list of playback errors\n   *\n   * @param {Object} [queryParams] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Returns a list of playback errors filtered by the windows operating system\n   * Data.errors.list({ filters: ['operating_system:windows'] });\n   *\n   * @see https://api-docs.mux.com/#view-error-get\n   */\n  list(queryParams) {\n    return api.get(PATH, queryParams, this.requestOptions);\n  }\n}\n\nmodule.exports = Errors;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/resources/errors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/data/resources/errors.js",
    "static": true,
    "longname": "src/data/resources/errors.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/data/resources/errors.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "Errors",
    "memberof": "src/data/resources/errors.js",
    "static": true,
    "longname": "src/data/resources/errors.js~Errors",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/resources/errors.js",
    "importStyle": "Errors",
    "description": "Errors Class - Provides access to the Mux Data Errors API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Returns a list of playback errors filtered by the windows operating system\nData.errors.list({ filters: ['operating_system:windows'] });"
    ],
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/resources/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/errors.js~Errors#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/data/resources/errors.js~Errors",
    "static": false,
    "longname": "src/data/resources/errors.js~Errors#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "list",
    "memberof": "src/data/resources/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/errors.js~Errors#list",
    "access": "public",
    "description": "Returns a list of playback errors",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Returns a list of playback errors filtered by the windows operating system\nData.errors.list({ filters: ['operating_system:windows'] });"
    ],
    "see": [
      "https://api-docs.mux.com/#view-error-get"
    ],
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryParams",
        "description": "example { timeframe: ['7:days'], filters: ['operating_system:windows'] }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/data/resources/exports.js",
    "content": "/*!\n * Mux Exports\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base exports path for the Mux API\n * */\nconst PATH = '/data/v1/exports';\n\n/**\n * Exports Class - Provides access to the Mux Data Exports API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n * // Lists the available video view exports along with URLs to retrieve them\n * Data.exports.list();\n */\nclass Exports {\n  /**\n   * @ignore\n   * Exports Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Lists the available video view exports along with URLs to retrieve them\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Lists the available video view exports along with URLs to retrieve them\n   * Data.exports.list();\n   *\n   * @see https://api-docs.mux.com/#export-get\n   */\n  list() {\n    return api.get(PATH, {}, this.requestOptions);\n  }\n}\n\nmodule.exports = Exports;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/resources/exports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/data/resources/exports.js",
    "static": true,
    "longname": "src/data/resources/exports.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/data/resources/exports.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Exports",
    "memberof": "src/data/resources/exports.js",
    "static": true,
    "longname": "src/data/resources/exports.js~Exports",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/resources/exports.js",
    "importStyle": "Exports",
    "description": "Exports Class - Provides access to the Mux Data Exports API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Lists the available video view exports along with URLs to retrieve them\nData.exports.list();"
    ],
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/resources/exports.js~Exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/exports.js~Exports#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/data/resources/exports.js~Exports",
    "static": false,
    "longname": "src/data/resources/exports.js~Exports#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "list",
    "memberof": "src/data/resources/exports.js~Exports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/exports.js~Exports#list",
    "access": "public",
    "description": "Lists the available video view exports along with URLs to retrieve them",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Lists the available video view exports along with URLs to retrieve them\nData.exports.list();"
    ],
    "see": [
      "https://api-docs.mux.com/#export-get"
    ],
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/data/resources/filters.js",
    "content": "/*!\n * Mux Filters\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base filters path for the Mux API\n * */\nconst PATH = '/data/v1/filters';\n\n/**\n * Filters Class - Provides access to the Mux Data Filters API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n * // Lists all the filters broken out into basic and advanced\n * Data.filters.list();\n */\nclass Filters {\n  /**\n   * @ignore\n   * Filters Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Lists the values for a filter along with a total count of related views\n   *\n   * @param {string} filterId - The filter name/id for see https://api-docs.mux.com/#filter-get-1 for a list of all filter ids\n   * @param {Object} [queryParams] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Lists the values for a filter along with a total count of related views\n   * Data.filters.get('browser', { timeframe: ['7:days'] });\n   *\n   * @see https://api-docs.mux.com/#filter-get-1\n   */\n  get(filterId, queryParams) {\n    return api.get(`${PATH}/${filterId}`, queryParams, this.requestOptions);\n  }\n\n  /**\n   * Lists all the filters broken out into basic and advanced\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Lists the available video view exports along with URLs to retrieve them\n   * Data.filters.list();\n   *\n   * @see https://api-docs.mux.com/#filter-get\n   */\n  list() {\n    return api.get(PATH, {}, this.requestOptions);\n  }\n}\n\nmodule.exports = Filters;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/resources/filters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/data/resources/filters.js",
    "static": true,
    "longname": "src/data/resources/filters.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/data/resources/filters.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "Filters",
    "memberof": "src/data/resources/filters.js",
    "static": true,
    "longname": "src/data/resources/filters.js~Filters",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/resources/filters.js",
    "importStyle": "Filters",
    "description": "Filters Class - Provides access to the Mux Data Filters API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Lists all the filters broken out into basic and advanced\nData.filters.list();"
    ],
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/resources/filters.js~Filters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/filters.js~Filters#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/data/resources/filters.js~Filters",
    "static": false,
    "longname": "src/data/resources/filters.js~Filters#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "get",
    "memberof": "src/data/resources/filters.js~Filters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/filters.js~Filters#get",
    "access": "public",
    "description": "Lists the values for a filter along with a total count of related views",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Lists the values for a filter along with a total count of related views\nData.filters.get('browser', { timeframe: ['7:days'] });"
    ],
    "see": [
      "https://api-docs.mux.com/#filter-get-1"
    ],
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filterId",
        "description": "The filter name/id for see https://api-docs.mux.com/#filter-get-1 for a list of all filter ids"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryParams",
        "description": "example { timeframe: ['7:days'], filters: ['operating_system:windows'] }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "list",
    "memberof": "src/data/resources/filters.js~Filters",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/filters.js~Filters#list",
    "access": "public",
    "description": "Lists all the filters broken out into basic and advanced",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Lists the available video view exports along with URLs to retrieve them\nData.filters.list();"
    ],
    "see": [
      "https://api-docs.mux.com/#filter-get"
    ],
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    },
    "params": []
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/data/resources/metrics.js",
    "content": "/*!\n * Mux Metrics\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base metrics path for the Mux API\n * */\nconst PATH = '/data/v1/metrics';\n\n/**\n * Metrics Class - Provides access to the Mux Data Metrics API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n * // List all of the values across every breakdown for a specific metric grouped by operating system\n * Data.metrics.breakdown('aggregate_startup_time', { group_by: 'operating_system' });\n */\nclass Metrics {\n  /**\n   * @ignore\n   * Metrics Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * List the breakdown values for a specific metric\n   *\n   * @param {string} metricId - The metric name/id for see https://api-docs.mux.com/#breakdown-get for a list of all metric ids\n   * @param {Object} queryParams - example: {group_by: 'browser'}\n   * NOTE: the group_by query parameter is required\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // List all of the values across every breakdown for a specific metric grouped by browser\n   * Data.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n   *\n   * @see https://api-docs.mux.com/#breakdown-get\n   */\n  breakdown(metricId, queryParams) {\n    return api.get(`${PATH}/${metricId}/breakdown`, queryParams, this.requestOptions);\n  }\n\n  /**\n   * List all of the values across every breakdown for a specific metric\n   *\n   * @param {Object} queryParams - example { value: 'safari', timeframe: '24:hours', dimension: 'cdn' }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // List the breakdown values for a specific metric within the last 24 hours\n   * Data.metrics.comparison({ value: 'safari', timeframe: '24:hours', dimension: 'cdn' });\n   * Note: the value query parameter is required\n   *\n   * @see https://api-docs.mux.com/#comparison-get\n   */\n  comparison(queryParams) {\n    return api.get(`${PATH}/comparison`, queryParams, this.requestOptions);\n  }\n\n  /**\n   * Returns a list of insights for a metric. These are the worst performing values across all\n   * breakdowns sorted by how much they negatively impact a specific metric.\n   *\n   * @param {string} metricId - The metric name/id for see https://api-docs.mux.com/#breakdown-get for a list of all metric ids\n   * @param {Object} [queryParams] - example { measurement: 'median', order_direction: 'desc' }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Get a list of insights for a metric measured by median and ordered descending\n   * Data.metrics.insights('aggregate_startup_time', { measurement: 'median', order_direction: 'desc' });\n   *\n   * @see https://api-docs.mux.com/#insight-get\n   */\n  insights(metricId, queryParams) {\n    return api.get(`${PATH}/${metricId}/insights`, queryParams, this.requestOptions);\n  }\n\n  /**\n   * Returns the overall value for a specific metric, as well as the total view count,\n   * watch time, and the Mux Global metric value for the metric.\n   *\n   * @param {string} metricId - The metric name/id for see https://api-docs.mux.com/#overall-get for a list of all metric ids\n   * @param {Object} [queryParams] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Get the overall value for a specific metric within the past 7 days\n   * Data.metrics.overall('aggregate_startup_time', { timeframe: ['7:days'] });\n   *\n   * @see https://api-docs.mux.com/#overall-get\n   */\n  overall(metricId, queryParams) {\n    return api.get(`${PATH}/${metricId}/overall`, queryParams, this.requestOptions);\n  }\n\n  /**\n   * Returns timeseries data for a specific metric\n   *\n   * @param {string} metricId - The metric name/id for see https://api-docs.mux.com/#timeseries for a list of all metric ids\n   * @param {Object} [queryParams] - example { timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Get timeseries data for a specific metric within the past 7 days\n   * Data.metrics.timeseries('aggregate_startup_time', { timeframe: ['7:days'] });\n   *\n   * @see https://api-docs.mux.com/#timeseries\n   */\n  timeseries(metricId, queryParams) {\n    return api.get(`${PATH}/${metricId}/timeseries`, queryParams, this.requestOptions);\n  }\n}\n\nmodule.exports = Metrics;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/resources/metrics.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/data/resources/metrics.js",
    "static": true,
    "longname": "src/data/resources/metrics.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/data/resources/metrics.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "class",
    "name": "Metrics",
    "memberof": "src/data/resources/metrics.js",
    "static": true,
    "longname": "src/data/resources/metrics.js~Metrics",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/resources/metrics.js",
    "importStyle": "Metrics",
    "description": "Metrics Class - Provides access to the Mux Data Metrics API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// List all of the values across every breakdown for a specific metric grouped by operating system\nData.metrics.breakdown('aggregate_startup_time', { group_by: 'operating_system' });"
    ],
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "breakdown",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#breakdown",
    "access": "public",
    "description": "List the breakdown values for a specific metric",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// List all of the values across every breakdown for a specific metric grouped by browser\nData.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });"
    ],
    "see": [
      "https://api-docs.mux.com/#breakdown-get"
    ],
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metricId",
        "description": "The metric name/id for see https://api-docs.mux.com/#breakdown-get for a list of all metric ids"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "queryParams",
        "description": "example: {group_by: 'browser'}\nNOTE: the group_by query parameter is required"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "comparison",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#comparison",
    "access": "public",
    "description": "List all of the values across every breakdown for a specific metric",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// List the breakdown values for a specific metric within the last 24 hours\nData.metrics.comparison({ value: 'safari', timeframe: '24:hours', dimension: 'cdn' });\nNote: the value query parameter is required"
    ],
    "see": [
      "https://api-docs.mux.com/#comparison-get"
    ],
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "queryParams",
        "description": "example { value: 'safari', timeframe: '24:hours', dimension: 'cdn' }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "insights",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#insights",
    "access": "public",
    "description": "Returns a list of insights for a metric. These are the worst performing values across all\nbreakdowns sorted by how much they negatively impact a specific metric.",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Get a list of insights for a metric measured by median and ordered descending\nData.metrics.insights('aggregate_startup_time', { measurement: 'median', order_direction: 'desc' });"
    ],
    "see": [
      "https://api-docs.mux.com/#insight-get"
    ],
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metricId",
        "description": "The metric name/id for see https://api-docs.mux.com/#breakdown-get for a list of all metric ids"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryParams",
        "description": "example { measurement: 'median', order_direction: 'desc' }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "overall",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#overall",
    "access": "public",
    "description": "Returns the overall value for a specific metric, as well as the total view count,\nwatch time, and the Mux Global metric value for the metric.",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Get the overall value for a specific metric within the past 7 days\nData.metrics.overall('aggregate_startup_time', { timeframe: ['7:days'] });"
    ],
    "see": [
      "https://api-docs.mux.com/#overall-get"
    ],
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metricId",
        "description": "The metric name/id for see https://api-docs.mux.com/#overall-get for a list of all metric ids"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryParams",
        "description": "example { timeframe: ['7:days'], filters: ['operating_system:windows'] }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "timeseries",
    "memberof": "src/data/resources/metrics.js~Metrics",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/metrics.js~Metrics#timeseries",
    "access": "public",
    "description": "Returns timeseries data for a specific metric",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Get timeseries data for a specific metric within the past 7 days\nData.metrics.timeseries('aggregate_startup_time', { timeframe: ['7:days'] });"
    ],
    "see": [
      "https://api-docs.mux.com/#timeseries"
    ],
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metricId",
        "description": "The metric name/id for see https://api-docs.mux.com/#timeseries for a list of all metric ids"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "queryParams",
        "description": "example { timeframe: ['7:days'], filters: ['operating_system:windows'] }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/data/resources/video_views.js",
    "content": "/*!\n * Mux Video Views\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base exports path for the Mux API\n * */\nconst PATH = '/data/v1/video-views';\n\n/**\n * VideoViews Class - Provides access to the Mux Data Video Views API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Data } = muxClient;\n *\n * // Returns a list of video views for a property that occurred within the specified timeframe.\n * // Results are ordered by view_end, according to what you provide for order_direction.\n * Data.videoViews.list({order_direction: 'asc'});\n */\nclass VideoViews {\n  /**\n   * @ignore\n   * VideoViews Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Returns a list of video views for a property that occurred within the specified timeframe.\n   * Results are ordered by view_end, according to what you provide for order_direction.\n   *\n   * @param {Object} queryParams - example { viewer_id: 'ABCD1234', timeframe: ['7:days'], filters: ['operating_system:windows'] }\n   * NOTE: the view\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * // Returns a list of video views for a property that occurred within the specified timeframe.\n   * Data.videoViews.list({ viewer_id: 'ABCD1234', timeframe: ['7:days'], order_direction: 'asc' });\n   * Note: the viewer_id query parameter is required\n   *\n   * @see https://api-docs.mux.com/#video-view-get-1\n   */\n  list(queryParams) {\n    return api.get(PATH, queryParams, this.requestOptions);\n  }\n\n  /**\n   * Returns the details for a single video view\n   *\n   * @param {string} videoViewId - The ID for the video view\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Data } = muxClient;\n   *\n   * //Returns the details for a single video view\n   * Data.videoViews.get('ABCD1234');\n   *\n   * @see https://api-docs.mux.com/#video-view-get-1\n   */\n  get(videoViewId) {\n    return api.get(`${PATH}/${videoViewId}`, {}, this.requestOptions);\n  }\n}\n\nmodule.exports = VideoViews;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/data/resources/video_views.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/data/resources/video_views.js",
    "static": true,
    "longname": "src/data/resources/video_views.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/data/resources/video_views.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "class",
    "name": "VideoViews",
    "memberof": "src/data/resources/video_views.js",
    "static": true,
    "longname": "src/data/resources/video_views.js~VideoViews",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/data/resources/video_views.js",
    "importStyle": "VideoViews",
    "description": "VideoViews Class - Provides access to the Mux Data Video Views API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Returns a list of video views for a property that occurred within the specified timeframe.\n// Results are ordered by view_end, according to what you provide for order_direction.\nData.videoViews.list({order_direction: 'asc'});"
    ],
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 88,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/data/resources/video_views.js~VideoViews",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/video_views.js~VideoViews#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/data/resources/video_views.js~VideoViews",
    "static": false,
    "longname": "src/data/resources/video_views.js~VideoViews#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "list",
    "memberof": "src/data/resources/video_views.js~VideoViews",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/video_views.js~VideoViews#list",
    "access": "public",
    "description": "Returns a list of video views for a property that occurred within the specified timeframe.\nResults are ordered by view_end, according to what you provide for order_direction.",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n// Returns a list of video views for a property that occurred within the specified timeframe.\nData.videoViews.list({ viewer_id: 'ABCD1234', timeframe: ['7:days'], order_direction: 'asc' });\nNote: the viewer_id query parameter is required"
    ],
    "see": [
      "https://api-docs.mux.com/#video-view-get-1"
    ],
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "queryParams",
        "description": "example { viewer_id: 'ABCD1234', timeframe: ['7:days'], filters: ['operating_system:windows'] }\nNOTE: the view"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "get",
    "memberof": "src/data/resources/video_views.js~VideoViews",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/data/resources/video_views.js~VideoViews#get",
    "access": "public",
    "description": "Returns the details for a single video view",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Data } = muxClient;\n\n//Returns the details for a single video view\nData.videoViews.get('ABCD1234');"
    ],
    "see": [
      "https://api-docs.mux.com/#video-view-get-1"
    ],
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "videoViewId",
        "description": "The ID for the video view"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/mux.js",
    "content": "/*!\n * Mux\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst Video = require('./video/video');\nconst Data = require('./data/data');\n\n/**\n * Mux Class - Provides access to the Mux Video and Mux Data API\n *\n * @type {Video}\n * @property {Video} Mux.Video provides access to the Mux Video API\n * @type {Data}\n * @property {Data} Mux.Data provides access to the Mux Data API\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video, Data } = muxClient;\n *\n * // Create an asset\n * let assetId;\n * Video.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n *   .then((res) => {\n *     const { data } = res.data;\n *     assetId = data.id;\n *   });\n *\n * // Create a playback Id for an asset\n * Video.playbackIds.create(assetId, { policy: 'public' });\n *\n * // List all of the values across every breakdown for the `aggregate_startup_time` metric\n * Data.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n */\nclass Mux {\n  /**\n   * Mux Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /** @type {Video} */\n    this.Video = new Video(accessToken, secret);\n\n    /** @type {Data} */\n    this.Data = new Data(accessToken, secret);\n  }\n}\n\nmodule.exports = Mux;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/mux.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "class",
    "name": "Mux",
    "memberof": "src/mux.js",
    "static": true,
    "longname": "src/mux.js~Mux",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node",
    "importStyle": "Mux",
    "description": "Mux Class - Provides access to the Mux Video and Mux Data API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video, Data } = muxClient;\n\n// Create an asset\nlet assetId;\nVideo.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n  .then((res) => {\n    const { data } = res.data;\n    assetId = data.id;\n  });\n\n// Create a playback Id for an asset\nVideo.playbackIds.create(assetId, { policy: 'public' });\n\n// List all of the values across every breakdown for the `aggregate_startup_time` metric\nData.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });"
    ],
    "lineNumber": 34,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Video"
        ],
        "spread": false,
        "optional": false,
        "name": "Mux.Video",
        "description": "provides access to the Mux Video API"
      },
      {
        "nullable": null,
        "types": [
          "Data"
        ],
        "spread": false,
        "optional": false,
        "name": "Mux.Data",
        "description": "provides access to the Mux Data API"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Data"
      ],
      "spread": false,
      "description": null
    },
    "interface": false
  },
  {
    "__docId__": 94,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/mux.js~Mux",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mux.js~Mux#constructor",
    "access": "public",
    "description": "Mux Constructor",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API secret"
      }
    ]
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "Video",
    "memberof": "src/mux.js~Mux",
    "static": false,
    "longname": "src/mux.js~Mux#Video",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Video"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "Data",
    "memberof": "src/mux.js~Mux",
    "static": false,
    "longname": "src/mux.js~Mux#Data",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Data"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/video/resources/assets.js",
    "content": "/*!\n * Mux Assets\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private Base asset path for the Mux API\n * */\nconst PATH = '/video/v1/assets';\n\n/**\n * @private\n * Build the base asset path for the Mux API\n * */\nconst buildBasePath = assetId => `${PATH}/${assetId}`;\n\n/**\n * Assets Class - Provides access to the Mux Video Assets API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video } = muxClient;\n *\n * // Create an asset\n * Video.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n */\nclass Assets {\n  /**\n   * @ignore\n   * Assets Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Creates a Mux asset with the specified JSON parameters\n   * @param {Object} params - Asset JSON parameters (e.g input)\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Create an asset\n   * Video.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n   *\n   * @see https://docs.mux.com/v1/reference#create-an-asset\n   */\n  create(params) {\n    if (!params) {\n      return Promise.reject(new Error('Params are required for creating an asset'));\n    }\n    return api.post(PATH, params, this.requestOptions);\n  }\n\n  /**\n   * Deletes a Mux asset\n   * @param {string} assetId - The ID for the asset intended for deletion\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Delete an asset\n   * Video.assets.deleteAsset(assetId);\n   *\n   * @see https://docs.mux.com/v1/reference#delete-an-asset\n   */\n  deleteAsset(assetId) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to delete an asset'));\n    }\n    return api.del(buildBasePath(assetId), this.requestOptions);\n  }\n\n  /**\n   * Get an asset\n   * @param {string} assetId - The ID for the asset\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Get an asset\n   * Video.assets.get(assetId);\n   *\n   * @see https://docs.mux.com/v1/reference#retrieve-an-asset\n   */\n  get(assetId) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to get an asset'));\n    }\n    return api.get(buildBasePath(assetId), {}, this.requestOptions);\n  }\n\n  /**\n   * Get input info for an asset\n   * @param {string} assetId - The ID for the asset\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Get input info for an asset\n   * Video.assets.inputInfo(assetId);\n   *\n   * @see https://docs.mux.com/v1/reference#retrieve-asset-input-info\n   */\n  inputInfo(assetId) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to get input-info'));\n    }\n    return api.get(`${buildBasePath(assetId)}/input-info`, {}, this.requestOptions);\n  }\n\n  /**\n   * List all assets for a Mux Environment (tied to your access token)\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // List all assets for a Mux Environment\n   * Video.assets.list();\n   *\n   * @see https://docs.mux.com/v1/reference#list-assets\n   */\n  list() {\n    return api.get(PATH, this.requestOptions);\n  }\n}\n\nmodule.exports = Assets;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/video/resources/assets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "PATH",
    "memberof": "src/video/resources/assets.js",
    "static": true,
    "longname": "src/video/resources/assets.js~PATH",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/video/resources/assets.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "buildBasePath",
    "memberof": "src/video/resources/assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/video/resources/assets.js~buildBasePath",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/video/resources/assets.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "name": "assetId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "Assets",
    "memberof": "src/video/resources/assets.js",
    "static": true,
    "longname": "src/video/resources/assets.js~Assets",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/video/resources/assets.js",
    "importStyle": "Assets",
    "description": "Assets Class - Provides access to the Mux Video Assets API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Create an asset\nVideo.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});"
    ],
    "lineNumber": 29,
    "interface": false
  },
  {
    "__docId__": 101,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/video/resources/assets.js~Assets",
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "create",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#create",
    "access": "public",
    "description": "Creates a Mux asset with the specified JSON parameters",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Create an asset\nVideo.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#create-an-asset"
    ],
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Asset JSON parameters (e.g input)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "deleteAsset",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#deleteAsset",
    "access": "public",
    "description": "Deletes a Mux asset",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Delete an asset\nVideo.assets.deleteAsset(assetId);"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#delete-an-asset"
    ],
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "The ID for the asset intended for deletion"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "get",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#get",
    "access": "public",
    "description": "Get an asset",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Get an asset\nVideo.assets.get(assetId);"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#retrieve-an-asset"
    ],
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "The ID for the asset"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "inputInfo",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#inputInfo",
    "access": "public",
    "description": "Get input info for an asset",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Get input info for an asset\nVideo.assets.inputInfo(assetId);"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#retrieve-asset-input-info"
    ],
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "The ID for the asset"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "list",
    "memberof": "src/video/resources/assets.js~Assets",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/assets.js~Assets#list",
    "access": "public",
    "description": "List all assets for a Mux Environment (tied to your access token)",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// List all assets for a Mux Environment\nVideo.assets.list();"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#list-assets"
    ],
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    },
    "params": []
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/video/resources/playbackIds.js",
    "content": "/*!\n * PlaybackIds\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst api = require('../../utils/api');\n\n/**\n * @private\n * Base playback ID path for the Mux API\n * */\nconst buildBasePath = assetId => `/video/v1/assets/${assetId}/playback-ids`;\n\n/**\n * PlaybackIds Class - Provides access to the Mux Video PlaybackIds API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video } = muxClient;\n *\n * // Create a playback Id for an asset\n * Video.playbackIds.create('assetId', { policy: 'public' });\n */\nclass PlaybackIds {\n  /**\n   * @ignore\n   * PlaybackIds Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API Access Token secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /**\n     *  @ignore\n     *  @type {Object} requestOptions - The HTTP request options for Mux Assets\n     *  @property {string} requestOptions.auth.username - HTTP basic auth username (access token)\n     *  @property {string} requestOptions.auth.password - HTTP basic auth password (secret)\n     * */\n    this.requestOptions = {\n      auth: {\n        username: accessToken,\n        password: secret,\n      },\n    };\n  }\n\n  /**\n   * Creates a playback ID for a Mux asset with the specified JSON parameters\n   * @param {string} assetId - Asset ID for the asset to create the playback ID for\n   * @param {Object} params - Playback ID JSON parameters (e.g policy)\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Create a playback Id for an asset\n   * Video.playbackIds.create('assetId', { policy: 'public' });\n   *\n   * @see https://docs.mux.com/v1/reference#add-an-asset-playback-id\n   */\n  create(assetId, params) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to create a playback ID'));\n    }\n\n    if (!params) {\n      return Promise.reject(new Error('Playback ID params are required'));\n    }\n    return api.post(buildBasePath(assetId), params, this.requestOptions);\n  }\n\n  /**\n   * Get a playbackId\n   * @param {string} assetId - The ID for the asset\n   * @param {string} playbackId - The ID for the playback ID to get the playback ID information for\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Get an asset\n   * Video.playbackIds.get(assetId, playbackId);\n   *\n   * @see https://docs.mux.com/v1/reference#retrieve-an-asset-playback-id\n   */\n  get(assetId, playbackId) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to get a playback ID'));\n    }\n\n    if (!playbackId) {\n      return Promise.reject(new Error('A playback ID is required to get a playback ID'));\n    }\n    return api.get(`${buildBasePath(assetId)}/${playbackId}`, {}, this.requestOptions);\n  }\n\n  /**\n   * Deletes a playback ID\n   * @param {string} assetId - The ID for the asset\n   * @param {string} playbackId - The ID for the playback ID to get the playback ID information for\n   * @returns {Promise} - Returns a resolved Promise with a response from the Mux API\n   *\n   * @example\n   * const muxClient = new Mux(accessToken, secret);\n   * const { Video } = muxClient;\n   *\n   * // Delete a playback ID\n   * Video.playbackIds.deletePlaybackId(assetId, playbackId);\n   *\n   * @see https://docs.mux.com/v1/reference#delete-an-asset-playback-id\n   */\n  deletePlaybackId(assetId, playbackId) {\n    if (!assetId) {\n      return Promise.reject(new Error('An asset ID is required to delete a playback ID'));\n    }\n\n    if (!playbackId) {\n      return Promise.reject(new Error('A playback ID is required to delete a playback ID'));\n    }\n    return api.del(`${buildBasePath(assetId)}/${playbackId}`, this.requestOptions);\n  }\n}\n\n\nmodule.exports = PlaybackIds;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/video/resources/playbackIds.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "buildBasePath",
    "memberof": "src/video/resources/playbackIds.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/video/resources/playbackIds.js~buildBasePath",
    "access": "private",
    "export": false,
    "importPath": "@mux/mux-node/src/video/resources/playbackIds.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "name": "assetId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "PlaybackIds",
    "memberof": "src/video/resources/playbackIds.js",
    "static": true,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/video/resources/playbackIds.js",
    "importStyle": "PlaybackIds",
    "description": "PlaybackIds Class - Provides access to the Mux Video PlaybackIds API",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Create a playback Id for an asset\nVideo.playbackIds.create('assetId', { policy: 'public' });"
    ],
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/video/resources/playbackIds.js~PlaybackIds",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API Access Token secret"
      }
    ]
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "requestOptions",
    "memberof": "src/video/resources/playbackIds.js~PlaybackIds",
    "static": false,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds#requestOptions",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "ignore": true,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.username",
        "description": "HTTP basic auth username (access token)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "requestOptions.auth.password",
        "description": "HTTP basic auth password (secret)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "create",
    "memberof": "src/video/resources/playbackIds.js~PlaybackIds",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds#create",
    "access": "public",
    "description": "Creates a playback ID for a Mux asset with the specified JSON parameters",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Create a playback Id for an asset\nVideo.playbackIds.create('assetId', { policy: 'public' });"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#add-an-asset-playback-id"
    ],
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "Asset ID for the asset to create the playback ID for"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Playback ID JSON parameters (e.g policy)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "get",
    "memberof": "src/video/resources/playbackIds.js~PlaybackIds",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds#get",
    "access": "public",
    "description": "Get a playbackId",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Get an asset\nVideo.playbackIds.get(assetId, playbackId);"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#retrieve-an-asset-playback-id"
    ],
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "The ID for the asset"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "playbackId",
        "description": "The ID for the playback ID to get the playback ID information for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "deletePlaybackId",
    "memberof": "src/video/resources/playbackIds.js~PlaybackIds",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/resources/playbackIds.js~PlaybackIds#deletePlaybackId",
    "access": "public",
    "description": "Deletes a playback ID",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Delete a playback ID\nVideo.playbackIds.deletePlaybackId(assetId, playbackId);"
    ],
    "see": [
      "https://docs.mux.com/v1/reference#delete-an-asset-playback-id"
    ],
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} - Returns a resolved Promise with a response from the Mux API"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "assetId",
        "description": "The ID for the asset"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "playbackId",
        "description": "The ID for the playback ID to get the playback ID information for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns a resolved Promise with a response from the Mux API"
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/video/video.js",
    "content": "/*!\n * Mux Video\n * Copyright(c) 2018 Mux Inc.\n */\n\nconst Assets = require('./resources/assets');\nconst PlaybackIds = require('./resources/playbackIds');\n\n/**\n * @ignore\n * Video Class - Provides access to the Mux Video API\n *\n * @example\n * const muxClient = new Mux(accessToken, secret);\n * const { Video } = muxClient;\n *\n * // Create an asset\n * Video.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n *\n * // Create a playback Id for an asset\n * Video.playbackIds.create('assetId', { policy: 'public' });\n */\nclass Video {\n  /**\n   * Video Constructor\n   *\n   * @param {string} accessToken - Mux API Access Token\n   * @param {string} secret - Mux API secret\n   * @constructor\n   */\n  constructor(accessToken, secret) {\n    if (typeof accessToken === 'undefined') {\n      throw new Error('API Access Token must be provided.');\n    }\n\n    if (typeof secret === 'undefined') {\n      throw new Error('API secret key must be provided');\n    }\n\n    /** @type {Assets} */\n    this.assets = new Assets(accessToken, secret);\n\n    /** @type {PlaybackIds} */\n    this.playbackIds = new PlaybackIds(accessToken, secret);\n  }\n}\n\nmodule.exports = Video;\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/src/video/video.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "Video",
    "memberof": "src/video/video.js",
    "static": true,
    "longname": "src/video/video.js~Video",
    "access": "public",
    "export": true,
    "importPath": "@mux/mux-node/src/video/video.js",
    "importStyle": "Video",
    "description": "",
    "examples": [
      "const muxClient = new Mux(accessToken, secret);\nconst { Video } = muxClient;\n\n// Create an asset\nVideo.assets.create({input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4'});\n\n// Create a playback Id for an asset\nVideo.playbackIds.create('assetId', { policy: 'public' });"
    ],
    "lineNumber": 23,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 118,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/video/video.js~Video",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/video/video.js~Video#constructor",
    "access": "public",
    "description": "Video Constructor",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessToken",
        "description": "Mux API Access Token"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "secret",
        "description": "Mux API secret"
      }
    ]
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "assets",
    "memberof": "src/video/video.js~Video",
    "static": false,
    "longname": "src/video/video.js~Video#assets",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Assets"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "playbackIds",
    "memberof": "src/video/video.js~Video",
    "static": false,
    "longname": "src/video/video.js~Video#playbackIds",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "PlaybackIds"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "index",
    "content": "# Mux Node SDK\n\nOfficial Mux API wrapper for Node projects.\n\nThis library is intended to provide Mux API convenience methods for applications written in server-side Javascript. __Please note__ that this package uses Mux access tokens and secret keys and is intended to be used in server-side code only.\n\nNot familiar with Mux? Check out https://mux.com/ for more information.\n\n## Documentation\n\nSee the [Mux-Node docs](https://muxinc.github.io/mux-node-sdk)\n\n## Installation\n```\nnpm install @mux/mux-node --save\n```\nor\n```\nyarn add @mux/mux-node\n```\n\n## Usage\nTo start, you will need a Mux access token and secret for your Mux environment. For more information on where to get\nan access token, visit the Mux Getting Started guide https://docs.mux.com/docs\n\nRequire the `@mux/mux-node` npm module and create a Mux instance. Your Mux instance will have `Data` and `Video` properties\nthat will allow you to access the Mux Data and Video APIs.\n\n```\nconst Mux = require('@mux/mux-node');\nconst muxClient = new Mux(accessToken, secret);\nconst { Video, Data } = muxClient;\n```\nAs an example, you can create a Mux asset and playback ID by using the below functions on your Video instance.\n```\n// Create an asset\nlet assetId;\nVideo.assets.create({ input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4' })\n  .then((res) => {\n    const { data } = res.data;\n    assetId = data.id;\n  });\n```\n\n```\n// Create a playback ID for an asset\nVideo.playbackIds.create(assetId, { policy: 'public' });\n```\n\nYou can access the Mux Data API in the same way by using your Data instance. For example, you can list all of the\nvalues across every breakdown for the `aggregate_startup_time` metric by using the below function.\n\n```\nData.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n```\n\nEvery function will return a chainable [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\nSee the [Mux-Node docs](https://muxinc.github.io/mux-node-sdk/identifiers.html) for a list of all available functions.\n\n## Development\n\nRun unit tests: `npm test` or `npm run test:unit`\n\nRun integration tests: `npm run test:int`\n\n__Note__: running the integration tests will require you to configure the `MUX_ACCESS_TOKEN` and `MUX_SECRET` environment variables with your Mux access token and secret.\n\n\nTo generate the ESDocs, run:\n```\n./node_modules/.bin/esdoc\nopen ./docs/index.html\n```\n\n\n",
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@mux/mux-node\",\n  \"version\": \"1.0.0-beta.0\",\n  \"description\": \"Mux API wrapper\",\n  \"keywords\": [\n    \"mux\",\n    \"video\",\n    \"video encoding\",\n    \"video transcoding\",\n    \"api\",\n    \"video analytics\"\n  ],\n  \"private\": true,\n  \"author\": \"Mux <help@mux.com> (https://mux.com/)\",\n  \"main\": \"src/mux.js\",\n  \"engines\": {\n    \"node\": \">=10\"\n  },\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"test\": \"mocha --recursive ./test/unit\",\n    \"test:unit\": \"mocha --recursive ./test/unit\",\n    \"test:int\": \"mocha --recursive ./test/integration\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.18.0\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"^4.1.2\",\n    \"dotenv\": \"^5.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-node\": \"^1.0.3\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-config-airbnb-base\": \"^12.1.0\",\n    \"eslint-plugin-chai-friendly\": \"^0.4.1\",\n    \"eslint-plugin-import\": \"^2.9.0\",\n    \"eslint-plugin-node\": \"^6.0.1\",\n    \"mocha\": \"^5.1.1\",\n    \"moxios\": \"^0.4.0\",\n    \"sinon\": \"^4.5.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/muxinc/mux-node-sdk.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/muxinc/mux-node-sdk/issues\"\n  },\n  \"homepage\": \"https://github.com/muxinc/mux-node-sdk#readme\"\n}\n",
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Mux Node SDK\n\nOfficial Mux API wrapper for Node projects.\n\nThis library is intended to provide Mux API convenience methods for applications written in server-side Javascript. __Please note__ that this package uses Mux access tokens and secret keys and is intended to be used in server-side code only.\n\nNot familiar with Mux? Check out https://mux.com/ for more information.\n\n## Documentation\n\nSee the [Mux-Node docs](https://muxinc.github.io/mux-node-sdk)\n\n## Installation\n```\nnpm install @mux/mux-node --save\n```\nor\n```\nyarn add @mux/mux-node\n```\n\n## Usage\nTo start, you will need a Mux access token and secret for your Mux environment. For more information on where to get\nan access token, visit the Mux Getting Started guide https://docs.mux.com/docs\n\nRequire the `@mux/mux-node` npm module and create a Mux instance. Your Mux instance will have `Data` and `Video` properties\nthat will allow you to access the Mux Data and Video APIs.\n\n```\nconst Mux = require('@mux/mux-node');\nconst muxClient = new Mux(accessToken, secret);\nconst { Video, Data } = muxClient;\n```\nAs an example, you can create a Mux asset and playback ID by using the below functions on your Video instance.\n```\n// Create an asset\nlet assetId;\nVideo.assets.create({ input: 'https://storage.googleapis.com/muxdemofiles/mux-video-intro.mp4' })\n  .then((res) => {\n    const { data } = res.data;\n    assetId = data.id;\n  });\n```\n\n```\n// Create a playback ID for an asset\nVideo.playbackIds.create(assetId, { policy: 'public' });\n```\n\nYou can access the Mux Data API in the same way by using your Data instance. For example, you can list all of the\nvalues across every breakdown for the `aggregate_startup_time` metric by using the below function.\n\n```\nData.metrics.breakdown('aggregate_startup_time', { group_by: 'browser' });\n```\n\nEvery function will return a chainable [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\nSee the [Mux-Node docs](https://muxinc.github.io/mux-node-sdk/identifiers.html) for a list of all available functions.\n\n## Development\n\nRun unit tests: `npm test` or `npm run test:unit`\n\nRun integration tests: `npm run test:int`\n\n__Note__: running the integration tests will require you to configure the `MUX_ACCESS_TOKEN` and `MUX_SECRET` environment variables with your Mux access token and secret.\n\n\nTo generate the ESDocs, run:\n```\n./node_modules/.bin/esdoc\nopen ./docs/index.html\n```\n\n\n",
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/manual/index.md",
    "name": "./manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/manual/overview.md",
    "name": "./manual/overview.md",
    "content": "test overview\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 121,
    "kind": "testFile",
    "name": "test/unit/data/data.spec.js",
    "content": "const { expect } = require('chai');\nconst Data = require('../../../src/data/data');\nconst Metrics = require('../../../src/data/resources/metrics');\nconst Filters = require('../../../src/data/resources/filters');\nconst Errors = require('../../../src/data/resources/errors');\nconst VideoViews = require('../../../src/data/resources/video_views');\nconst Exports = require('../../../src/data/resources/exports');\n\n/** @test {Data} */\ndescribe('Unit::Data', () => {\n  const testApiKey = 'testApiKey';\n  const testSecret = 'testSecret';\n\n  /** @test {Data} */\n  describe('Data', () => {\n    /** @test {Data} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Data()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Data} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Data(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Data} */\n    it('creates a new Data instance', () => {\n      const TestData = new Data(testApiKey, testSecret);\n      expect(() => new Data(testApiKey, testSecret)).to.not.throw();\n      expect(TestData.metrics).to.be.an.instanceof(Metrics);\n      expect(TestData.errors).to.be.an.instanceof(Errors);\n      expect(TestData.exports).to.be.an.instanceof(Exports);\n      expect(TestData.videoViews).to.be.an.instanceof(VideoViews);\n      expect(TestData.filters).to.be.an.instanceof(Filters);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/data.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/unit/data/data.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/data.spec.js~describe0",
    "access": null,
    "description": "Unit::Data",
    "lineNumber": 10,
    "testTargets": [
      "Data"
    ]
  },
  {
    "__docId__": 123,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/unit/data/data.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/data.spec.js~describe0.describe1",
    "access": null,
    "description": "Data",
    "lineNumber": 15,
    "testTargets": [
      "Data"
    ]
  },
  {
    "__docId__": 124,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/unit/data/data.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/data.spec.js~describe0.describe1.it2",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 17,
    "testTargets": [
      "Data"
    ]
  },
  {
    "__docId__": 125,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/unit/data/data.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/data.spec.js~describe0.describe1.it3",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 22,
    "testTargets": [
      "Data"
    ]
  },
  {
    "__docId__": 126,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/unit/data/data.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/data.spec.js~describe0.describe1.it4",
    "access": null,
    "description": "creates a new Data instance",
    "lineNumber": 27,
    "testTargets": [
      "Data"
    ]
  },
  {
    "__docId__": 127,
    "kind": "testFile",
    "name": "test/unit/data/resources/errors.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst Errors = require('../../../../src/data/resources/errors');\n\n/** @test {Errors} */\ndescribe('Unit::Errors', () => {\n  const testApiKey = 'testKey';\n  const testSecret = 'testSecret';\n  const errorsInstance = new Errors(testApiKey, testSecret);\n\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {Errors} */\n  describe('Errors', () => {\n    /** @test {Errors} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Errors()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Errors} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Errors(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Errors} */\n    it('creates a new Errors instance', () => {\n      const TestErrors = new Errors(testApiKey, testSecret);\n      expect(() => new Errors(testApiKey, testSecret)).to.not.throw();\n      expect(TestErrors.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestErrors.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {Errors.list} */\n  describe('Errors.list', () => {\n    /** @test {Errors.list} */\n    it('makes a get request to the Mux data errors route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/errors', {\n        status: 200,\n        responseText: 'errors',\n      });\n\n      const onFulfilled = sinon.spy();\n      errorsInstance.list({})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('errors');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/resources/errors.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "test",
    "name": "describe5",
    "testId": 5,
    "memberof": "test/unit/data/resources/errors.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5",
    "access": null,
    "description": "Unit::Errors",
    "lineNumber": 7,
    "testTargets": [
      "Errors"
    ]
  },
  {
    "__docId__": 129,
    "kind": "test",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe6",
    "access": null,
    "description": "Errors",
    "lineNumber": 21,
    "testTargets": [
      "Errors"
    ]
  },
  {
    "__docId__": 130,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe6.it7",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 23,
    "testTargets": [
      "Errors"
    ]
  },
  {
    "__docId__": 131,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe6.it8",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 28,
    "testTargets": [
      "Errors"
    ]
  },
  {
    "__docId__": 132,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe6.it9",
    "access": null,
    "description": "creates a new Errors instance",
    "lineNumber": 33,
    "testTargets": [
      "Errors"
    ]
  },
  {
    "__docId__": 133,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe10",
    "access": null,
    "description": "Errors.list",
    "lineNumber": 42,
    "testTargets": [
      "Errors.list"
    ]
  },
  {
    "__docId__": 134,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/unit/data/resources/errors.spec.js~describe5.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/errors.spec.js~describe5.describe10.it11",
    "access": null,
    "description": "makes a get request to the Mux data errors route",
    "lineNumber": 44,
    "testTargets": [
      "Errors.list"
    ]
  },
  {
    "__docId__": 135,
    "kind": "testFile",
    "name": "test/unit/data/resources/exports.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst Exports = require('../../../../src/data/resources/exports');\n\n/** @test {Exports} */\ndescribe('Unit::Exports', () => {\n  const testApiKey = 'testKey';\n  const testSecret = 'testSecret';\n  const exportsInstance = new Exports(testApiKey, testSecret);\n\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {Exports} */\n  describe('Exports', () => {\n    /** @test {Exports} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Exports()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Exports} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Exports(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Exports} */\n    it('creates a new Exports instance', () => {\n      const TestExports = new Exports(testApiKey, testSecret);\n      expect(() => new Exports(testApiKey, testSecret)).to.not.throw();\n      expect(TestExports.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestExports.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {Exports.list} */\n  describe('Exports.list', () => {\n    /** @test {Exports.list} */\n    it('makes a get request to the Mux data exports route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/exports', {\n        status: 200,\n        responseText: 'exports',\n      });\n\n      const onFulfilled = sinon.spy();\n      exportsInstance.list({})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('exports');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/resources/exports.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/unit/data/resources/exports.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12",
    "access": null,
    "description": "Unit::Exports",
    "lineNumber": 7,
    "testTargets": [
      "Exports"
    ]
  },
  {
    "__docId__": 137,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe13",
    "access": null,
    "description": "Exports",
    "lineNumber": 21,
    "testTargets": [
      "Exports"
    ]
  },
  {
    "__docId__": 138,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe13.it14",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 23,
    "testTargets": [
      "Exports"
    ]
  },
  {
    "__docId__": 139,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe13.it15",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 28,
    "testTargets": [
      "Exports"
    ]
  },
  {
    "__docId__": 140,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe13.it16",
    "access": null,
    "description": "creates a new Exports instance",
    "lineNumber": 33,
    "testTargets": [
      "Exports"
    ]
  },
  {
    "__docId__": 141,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe17",
    "access": null,
    "description": "Exports.list",
    "lineNumber": 42,
    "testTargets": [
      "Exports.list"
    ]
  },
  {
    "__docId__": 142,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/unit/data/resources/exports.spec.js~describe12.describe17",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/exports.spec.js~describe12.describe17.it18",
    "access": null,
    "description": "makes a get request to the Mux data exports route",
    "lineNumber": 44,
    "testTargets": [
      "Exports.list"
    ]
  },
  {
    "__docId__": 143,
    "kind": "testFile",
    "name": "test/unit/data/resources/filters.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst Filters = require('../../../../src/data/resources/filters');\n\n/** @test {Filters} */\ndescribe('Unit::Filters', () => {\n  const testApiKey = 'testKey';\n  const testSecret = 'testSecret';\n  const filtersInstance = new Filters(testApiKey, testSecret);\n\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {Filters} */\n  describe('Filters', () => {\n    /** @test {Filters} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Filters()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Filters} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Filters(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Filters} */\n    it('creates a new Filters instance', () => {\n      const TestFilters = new Filters(testApiKey, testSecret);\n      expect(() => new Filters(testApiKey, testSecret)).to.not.throw();\n      expect(TestFilters.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestFilters.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {Filters.list} */\n  describe('Filters.list', () => {\n    /** @test {Filters.list} */\n    it('makes a get request to the Mux data filters route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/filters', {\n        status: 200,\n        responseText: 'filters',\n      });\n\n      const onFulfilled = sinon.spy();\n      filtersInstance.list({})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('filters');\n        done();\n      });\n    });\n  });\n\n  /** @test {Filters.get} */\n  describe('Filters.get', () => {\n    /** @test {Filters.get} */\n    it('makes a get request to the Mux data filters route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/filters/someFilter', {\n        status: 200,\n        responseText: 'filters',\n      });\n\n      const onFulfilled = sinon.spy();\n      filtersInstance.get('someFilter', {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('filters');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/resources/filters.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "test/unit/data/resources/filters.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19",
    "access": null,
    "description": "Unit::Filters",
    "lineNumber": 7,
    "testTargets": [
      "Filters"
    ]
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "describe20",
    "testId": 20,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe20",
    "access": null,
    "description": "Filters",
    "lineNumber": 21,
    "testTargets": [
      "Filters"
    ]
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe20.it21",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 23,
    "testTargets": [
      "Filters"
    ]
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe20.it22",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 28,
    "testTargets": [
      "Filters"
    ]
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe20.it23",
    "access": null,
    "description": "creates a new Filters instance",
    "lineNumber": 33,
    "testTargets": [
      "Filters"
    ]
  },
  {
    "__docId__": 149,
    "kind": "test",
    "name": "describe24",
    "testId": 24,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe24",
    "access": null,
    "description": "Filters.list",
    "lineNumber": 42,
    "testTargets": [
      "Filters.list"
    ]
  },
  {
    "__docId__": 150,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19.describe24",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe24.it25",
    "access": null,
    "description": "makes a get request to the Mux data filters route",
    "lineNumber": 44,
    "testTargets": [
      "Filters.list"
    ]
  },
  {
    "__docId__": 151,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe26",
    "access": null,
    "description": "Filters.get",
    "lineNumber": 62,
    "testTargets": [
      "Filters.get"
    ]
  },
  {
    "__docId__": 152,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/unit/data/resources/filters.spec.js~describe19.describe26",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/filters.spec.js~describe19.describe26.it27",
    "access": null,
    "description": "makes a get request to the Mux data filters route",
    "lineNumber": 64,
    "testTargets": [
      "Filters.get"
    ]
  },
  {
    "__docId__": 153,
    "kind": "testFile",
    "name": "test/unit/data/resources/metrics.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst Metrics = require('../../../../src/data/resources/metrics');\n\n/** @test {Metrics} */\ndescribe('Unit::Metrics', () => {\n  const testApiKey = 'testKey';\n  const testSecret = 'testSecret';\n  const metricsInstance = new Metrics(testApiKey, testSecret);\n\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {Metrics} */\n  describe('Metrics', () => {\n    /** @test {Metrics} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Metrics()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Metrics} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Metrics(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Metrics} */\n    it('creates a new Metrics instance', () => {\n      const TestMetrics = new Metrics(testApiKey, testSecret);\n      expect(() => new Metrics(testApiKey, testSecret)).to.not.throw();\n      expect(TestMetrics.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestMetrics.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {Metrics.breakdown} */\n  describe('Metrics.breakdown', () => {\n    /** @test {Metrics.breakdown} */\n    it('makes a get request to the Mux data breakdown route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/metrics/testMetric/breakdown', {\n        status: 200,\n        responseText: 'breakdown',\n      });\n\n      const onFulfilled = sinon.spy();\n      metricsInstance.breakdown('testMetric', {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('breakdown');\n        done();\n      });\n    });\n  });\n\n  /** @test {Metrics.comparison} */\n  describe('Metrics.comparison', () => {\n    /** @test {Metrics.comparison} */\n    it('makes a get request to the Mux data comparision route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/metrics/comparison', {\n        status: 200,\n        responseText: 'comparison',\n      });\n\n      const onFulfilled = sinon.spy();\n      metricsInstance.comparison({})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('comparison');\n        done();\n      });\n    });\n  });\n\n  /** @test {Metrics.insights} */\n  describe('Metrics.insights', () => {\n    /** @test {Metrics.insights} */\n    it('makes a get request to the Mux data insights route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/metrics/testMetric/insights', {\n        status: 200,\n        responseText: 'insights',\n      });\n\n      const onFulfilled = sinon.spy();\n      metricsInstance.insights('testMetric')\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('insights');\n        done();\n      });\n    });\n  });\n\n  /** @test {Metrics.overall} */\n  describe('Metrics.overall', () => {\n    /** @test {Metrics.overall} */\n    it('makes a get request to the Mux data overall route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/metrics/testMetric/overall', {\n        status: 200,\n        responseText: 'overall',\n      });\n\n      const onFulfilled = sinon.spy();\n      metricsInstance.overall('testMetric', {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('overall');\n        done();\n      });\n    });\n  });\n\n  /** @test {Metrics.timeseries} */\n  describe('Metrics.timeseries', () => {\n    /** @test {Metrics.timeseries} */\n    it('makes a get request to the Mux data timeseries route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/metrics/testMetric/timeseries', {\n        status: 200,\n        responseText: 'timeseries',\n      });\n\n      const onFulfilled = sinon.spy();\n      metricsInstance.timeseries('testMetric', {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('timeseries');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/resources/metrics.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/unit/data/resources/metrics.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28",
    "access": null,
    "description": "Unit::Metrics",
    "lineNumber": 7,
    "testTargets": [
      "Metrics"
    ]
  },
  {
    "__docId__": 155,
    "kind": "test",
    "name": "describe29",
    "testId": 29,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe29",
    "access": null,
    "description": "Metrics",
    "lineNumber": 21,
    "testTargets": [
      "Metrics"
    ]
  },
  {
    "__docId__": 156,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe29.it30",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 23,
    "testTargets": [
      "Metrics"
    ]
  },
  {
    "__docId__": 157,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe29.it31",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 28,
    "testTargets": [
      "Metrics"
    ]
  },
  {
    "__docId__": 158,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe29.it32",
    "access": null,
    "description": "creates a new Metrics instance",
    "lineNumber": 33,
    "testTargets": [
      "Metrics"
    ]
  },
  {
    "__docId__": 159,
    "kind": "test",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe33",
    "access": null,
    "description": "Metrics.breakdown",
    "lineNumber": 42,
    "testTargets": [
      "Metrics.breakdown"
    ]
  },
  {
    "__docId__": 160,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe33",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe33.it34",
    "access": null,
    "description": "makes a get request to the Mux data breakdown route",
    "lineNumber": 44,
    "testTargets": [
      "Metrics.breakdown"
    ]
  },
  {
    "__docId__": 161,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe35",
    "access": null,
    "description": "Metrics.comparison",
    "lineNumber": 62,
    "testTargets": [
      "Metrics.comparison"
    ]
  },
  {
    "__docId__": 162,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe35.it36",
    "access": null,
    "description": "makes a get request to the Mux data comparision route",
    "lineNumber": 64,
    "testTargets": [
      "Metrics.comparison"
    ]
  },
  {
    "__docId__": 163,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe37",
    "access": null,
    "description": "Metrics.insights",
    "lineNumber": 82,
    "testTargets": [
      "Metrics.insights"
    ]
  },
  {
    "__docId__": 164,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe37.it38",
    "access": null,
    "description": "makes a get request to the Mux data insights route",
    "lineNumber": 84,
    "testTargets": [
      "Metrics.insights"
    ]
  },
  {
    "__docId__": 165,
    "kind": "test",
    "name": "describe39",
    "testId": 39,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe39",
    "access": null,
    "description": "Metrics.overall",
    "lineNumber": 102,
    "testTargets": [
      "Metrics.overall"
    ]
  },
  {
    "__docId__": 166,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe39",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe39.it40",
    "access": null,
    "description": "makes a get request to the Mux data overall route",
    "lineNumber": 104,
    "testTargets": [
      "Metrics.overall"
    ]
  },
  {
    "__docId__": 167,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe41",
    "access": null,
    "description": "Metrics.timeseries",
    "lineNumber": 122,
    "testTargets": [
      "Metrics.timeseries"
    ]
  },
  {
    "__docId__": 168,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/unit/data/resources/metrics.spec.js~describe28.describe41",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/metrics.spec.js~describe28.describe41.it42",
    "access": null,
    "description": "makes a get request to the Mux data timeseries route",
    "lineNumber": 124,
    "testTargets": [
      "Metrics.timeseries"
    ]
  },
  {
    "__docId__": 169,
    "kind": "testFile",
    "name": "test/unit/data/resources/video_ views.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst VideoViews = require('../../../../src/data/resources/video_views');\n\n/** @test {VideoViews} */\ndescribe('Unit::VideoViews', () => {\n  const testApiKey = 'testKey';\n  const testSecret = 'testSecret';\n  const videoViewsInstance = new VideoViews(testApiKey, testSecret);\n\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {VideoViews} */\n  describe('VideoViews', () => {\n    /** @test {VideoViews} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new VideoViews()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {VideoViews} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new VideoViews(testApiKey)).to.throw('API secret key must be provided');\n    });\n\n    /** @test {VideoViews} */\n    it('creates a new VideoViews instance', () => {\n      const TestVideoViews = new VideoViews(testApiKey, testSecret);\n      expect(() => new VideoViews(testApiKey, testSecret)).to.not.throw();\n      expect(TestVideoViews.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestVideoViews.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {VideoViews.list} */\n  describe('VideoViews.list', () => {\n    /** @test {VideoViews.list} */\n    it('makes a get request to the Mux data video-views route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/video-views', {\n        status: 200,\n        responseText: 'video views',\n      });\n\n      const onFulfilled = sinon.spy();\n      videoViewsInstance.list({})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('video views');\n        done();\n      });\n    });\n  });\n\n  /** @test {VideoViews.get} */\n  describe('VideoViews.get', () => {\n    /** @test {VideoViews.get} */\n    it('makes a get request to the Mux data video-views route', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1/video-views/someView', {\n        status: 200,\n        responseText: 'video views',\n      });\n\n      const onFulfilled = sinon.spy();\n      videoViewsInstance.get('someView')\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('video views');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/data/resources/video_ views.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "test/unit/data/resources/video_ views.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43",
    "access": null,
    "description": "Unit::VideoViews",
    "lineNumber": 7,
    "testTargets": [
      "VideoViews"
    ]
  },
  {
    "__docId__": 171,
    "kind": "test",
    "name": "describe44",
    "testId": 44,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe44",
    "access": null,
    "description": "VideoViews",
    "lineNumber": 21,
    "testTargets": [
      "VideoViews"
    ]
  },
  {
    "__docId__": 172,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43.describe44",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe44.it45",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 23,
    "testTargets": [
      "VideoViews"
    ]
  },
  {
    "__docId__": 173,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43.describe44",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe44.it46",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 28,
    "testTargets": [
      "VideoViews"
    ]
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43.describe44",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe44.it47",
    "access": null,
    "description": "creates a new VideoViews instance",
    "lineNumber": 33,
    "testTargets": [
      "VideoViews"
    ]
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "describe48",
    "testId": 48,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe48",
    "access": null,
    "description": "VideoViews.list",
    "lineNumber": 42,
    "testTargets": [
      "VideoViews.list"
    ]
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43.describe48",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe48.it49",
    "access": null,
    "description": "makes a get request to the Mux data video-views route",
    "lineNumber": 44,
    "testTargets": [
      "VideoViews.list"
    ]
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "describe50",
    "testId": 50,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe50",
    "access": null,
    "description": "VideoViews.get",
    "lineNumber": 62,
    "testTargets": [
      "VideoViews.get"
    ]
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "test/unit/data/resources/video_ views.spec.js~describe43.describe50",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/data/resources/video_ views.spec.js~describe43.describe50.it51",
    "access": null,
    "description": "makes a get request to the Mux data video-views route",
    "lineNumber": 64,
    "testTargets": [
      "VideoViews.get"
    ]
  },
  {
    "__docId__": 179,
    "kind": "testFile",
    "name": "test/unit/mux.spec.js",
    "content": "const { expect } = require('chai');\nconst Mux = require('../../src/mux');\nconst MuxVideo = require('../../src/video/video');\n\n/** @test {Mux} */\ndescribe('Unit::Mux', () => {\n  /** @test {Mux} */\n  describe('Mux', () => {\n    /** @test {Mux} */\n    it('exposes Mux Video and Data', () => {\n      const muxClient = new Mux('testKey', 'testSecret');\n      const { Video } = muxClient;\n      expect(Video).to.to.be.an.instanceof(MuxVideo);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/mux.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "test/unit/mux.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/mux.spec.js~describe52",
    "access": null,
    "description": "Unit::Mux",
    "lineNumber": 6,
    "testTargets": [
      "Mux"
    ]
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "describe53",
    "testId": 53,
    "memberof": "test/unit/mux.spec.js~describe52",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/mux.spec.js~describe52.describe53",
    "access": null,
    "description": "Mux",
    "lineNumber": 8,
    "testTargets": [
      "Mux"
    ]
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/unit/mux.spec.js~describe52.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/mux.spec.js~describe52.describe53.it54",
    "access": null,
    "description": "exposes Mux Video and Data",
    "lineNumber": 10,
    "testTargets": [
      "Mux"
    ]
  },
  {
    "__docId__": 183,
    "kind": "testFile",
    "name": "test/unit/utils/api.spec.js",
    "content": "const { expect } = require('chai');\nconst moxios = require('moxios');\nconst sinon = require('sinon');\nconst api = require('../../../src/utils/api');\n\n/** @test {api} */\ndescribe('Unit::api', () => {\n  beforeEach(() => {\n    moxios.install();\n  });\n\n  afterEach(() => {\n    moxios.uninstall();\n  });\n\n  /** @test {api.get} */\n  describe('api.get', () => {\n    /** @test {api.get} */\n    it('makes a get request', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1', {\n        status: 200,\n        responseText: 'success',\n      });\n\n      const onFulfilled = sinon.spy();\n      api.get('/data/v1', {}, {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('success');\n        done();\n      });\n    });\n  });\n\n  /** @test {api.post} */\n  describe('api.post', () => {\n    /** @test {api.post} */\n    it('makes a post request', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1', {\n        status: 200,\n        responseText: 'success',\n      });\n\n      const onFulfilled = sinon.spy();\n      api.post('/data/v1', {}, {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('success');\n        done();\n      });\n    });\n  });\n\n  /** @test {api.put} */\n  describe('api.put', () => {\n    /** @test {api.put} */\n    it('makes a put request', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1', {\n        status: 200,\n        responseText: 'success',\n      });\n\n      const onFulfilled = sinon.spy();\n      api.put('/data/v1', {}, {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('success');\n        done();\n      });\n    });\n  });\n\n  /** @test {api.del} */\n  describe('api.del', () => {\n    /** @test {api.del} */\n    it('makes a delete request', (done) => {\n      moxios.stubRequest('https://api.mux.com/data/v1', {\n        status: 200,\n        responseText: 'success',\n      });\n\n      const onFulfilled = sinon.spy();\n      api.del('/data/v1', {})\n        .then(onFulfilled);\n\n      return moxios.wait(() => {\n        expect(onFulfilled.getCall(0).args[0].data).to.equal('success');\n        done();\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/utils/api.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "describe55",
    "testId": 55,
    "memberof": "test/unit/utils/api.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55",
    "access": null,
    "description": "Unit::api",
    "lineNumber": 7,
    "testTargets": [
      "api"
    ]
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "describe56",
    "testId": 56,
    "memberof": "test/unit/utils/api.spec.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe56",
    "access": null,
    "description": "api.get",
    "lineNumber": 17,
    "testTargets": [
      "api.get"
    ]
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "test/unit/utils/api.spec.js~describe55.describe56",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe56.it57",
    "access": null,
    "description": "makes a get request",
    "lineNumber": 19,
    "testTargets": [
      "api.get"
    ]
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "test/unit/utils/api.spec.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe58",
    "access": null,
    "description": "api.post",
    "lineNumber": 37,
    "testTargets": [
      "api.post"
    ]
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "test/unit/utils/api.spec.js~describe55.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe58.it59",
    "access": null,
    "description": "makes a post request",
    "lineNumber": 39,
    "testTargets": [
      "api.post"
    ]
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "test/unit/utils/api.spec.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe60",
    "access": null,
    "description": "api.put",
    "lineNumber": 57,
    "testTargets": [
      "api.put"
    ]
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/unit/utils/api.spec.js~describe55.describe60",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe60.it61",
    "access": null,
    "description": "makes a put request",
    "lineNumber": 59,
    "testTargets": [
      "api.put"
    ]
  },
  {
    "__docId__": 191,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "test/unit/utils/api.spec.js~describe55",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe62",
    "access": null,
    "description": "api.del",
    "lineNumber": 77,
    "testTargets": [
      "api.del"
    ]
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "test/unit/utils/api.spec.js~describe55.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/utils/api.spec.js~describe55.describe62.it63",
    "access": null,
    "description": "makes a delete request",
    "lineNumber": 79,
    "testTargets": [
      "api.del"
    ]
  },
  {
    "__docId__": 193,
    "kind": "testFile",
    "name": "test/unit/video/resources/assets.spec.js",
    "content": "const { expect } = require('chai');\nconst sinon = require('sinon');\nconst Assets = require('../../../../src/video/resources/assets');\nconst api = require('../../../../src/utils/api');\n\n/** @test {Assets} */\ndescribe('Unit::Assets', () => {\n  const testApiKey = 'testApiKey';\n  const testSecret = 'testSecret';\n  const testAssets = new Assets(testApiKey, testSecret);\n\n  /** @test {Assets} */\n  describe('Assets', () => {\n    /** @test {Assets} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Assets()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Assets} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Assets('testKey')).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Assets} */\n    it('creates a new Assets instance', () => {\n      const TestAssets = new Assets(testApiKey, testSecret);\n      expect(() => new Assets(testApiKey, testSecret)).to.not.throw();\n      expect(TestAssets.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestAssets.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {Assets.create} */\n  describe('Assets.create', () => {\n    before(() => {\n      sinon.stub(api, 'post');\n    });\n\n    after(() => {\n      api.post.restore();\n    });\n\n    /** @test {Assets.create} */\n    it('makes a POST request to create an asset', () => {\n      testAssets.create({ input: 'http://test.mov' });\n      expect(api.post.calledOnce);\n    });\n\n    /** @test {Assets.create} */\n    it('throws an error if no asset params are given', () => (\n      testAssets.create()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('Params are required for creating an asset');\n        })\n    ));\n  });\n\n  /** @test {Assets.get} */\n  describe('Assets.get', () => {\n    before(() => {\n      sinon.stub(api, 'get');\n    });\n\n    after(() => {\n      api.get.restore();\n    });\n\n    /** @test {Assets.get} */\n    it('makes a GET request to get an asset', () => {\n      testAssets.get('somefakeasset');\n      expect(api.get.calledOnce);\n    });\n\n    /** @test {Assets.get} */\n    it('throws an error when an asset id is not given', () => (\n      testAssets.get()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to get an asset');\n        })\n    ));\n  });\n\n  /** @test {Assets.deleteAsset} */\n  describe('Assets.deleteAsset', () => {\n    before(() => {\n      sinon.stub(api, 'del');\n    });\n\n    after(() => {\n      api.del.restore();\n    });\n\n    /** @test {Assets.deleteAsset} */\n    it('makes a DELETE request to delete an asset', () => {\n      testAssets.deleteAsset('somefakeasset');\n      expect(api.del.calledOnce);\n    });\n\n    /** @test {Assets.deleteAsset} */\n    it('throws an error when an asset id is not given', () => (\n      testAssets.deleteAsset()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to delete an asset');\n        })\n    ));\n  });\n\n  /** @test {Assets.inputInfo} */\n  describe('Assets.inputInfo', () => {\n    before(() => {\n      sinon.stub(api, 'get');\n    });\n\n    after(() => {\n      api.get.restore();\n    });\n\n    /** @test {Assets.inputInfo} */\n    it('makes a GET rquest to get input info for an asset', () => {\n      testAssets.inputInfo('somefakeasset');\n      expect(api.get.calledOnce);\n    });\n\n    /** @test {Assets.inputInfo} */\n    it('throws an error when an asset id is not given', () => (\n      testAssets.inputInfo()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to get input-info');\n        })\n    ));\n  });\n\n  /** @test {Assets.list} */\n  describe('Assets.list', () => {\n    before(() => {\n      sinon.stub(api, 'get');\n    });\n\n    after(() => {\n      api.get.restore();\n    });\n\n    /** @test {Assets.list} */\n    it('makes a GET request to lists all assets for an environment', () => {\n      testAssets.list();\n      expect(api.get.calledOnce);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/video/resources/assets.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/unit/video/resources/assets.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64",
    "access": null,
    "description": "Unit::Assets",
    "lineNumber": 7,
    "testTargets": [
      "Assets"
    ]
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe65",
    "access": null,
    "description": "Assets",
    "lineNumber": 13,
    "testTargets": [
      "Assets"
    ]
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe65.it66",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 15,
    "testTargets": [
      "Assets"
    ]
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe65.it67",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 20,
    "testTargets": [
      "Assets"
    ]
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe65.it68",
    "access": null,
    "description": "creates a new Assets instance",
    "lineNumber": 25,
    "testTargets": [
      "Assets"
    ]
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "describe69",
    "testId": 69,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe69",
    "access": null,
    "description": "Assets.create",
    "lineNumber": 34,
    "testTargets": [
      "Assets.create"
    ]
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe69",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe69.it70",
    "access": null,
    "description": "makes a POST request to create an asset",
    "lineNumber": 44,
    "testTargets": [
      "Assets.create"
    ]
  },
  {
    "__docId__": 201,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe69",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe69.it71",
    "access": null,
    "description": "throws an error if no asset params are given",
    "lineNumber": 50,
    "testTargets": [
      "Assets.create"
    ]
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "describe72",
    "testId": 72,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe72",
    "access": null,
    "description": "Assets.get",
    "lineNumber": 63,
    "testTargets": [
      "Assets.get"
    ]
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe72",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe72.it73",
    "access": null,
    "description": "makes a GET request to get an asset",
    "lineNumber": 73,
    "testTargets": [
      "Assets.get"
    ]
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe72",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe72.it74",
    "access": null,
    "description": "throws an error when an asset id is not given",
    "lineNumber": 79,
    "testTargets": [
      "Assets.get"
    ]
  },
  {
    "__docId__": 205,
    "kind": "test",
    "name": "describe75",
    "testId": 75,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe75",
    "access": null,
    "description": "Assets.deleteAsset",
    "lineNumber": 92,
    "testTargets": [
      "Assets.deleteAsset"
    ]
  },
  {
    "__docId__": 206,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe75.it76",
    "access": null,
    "description": "makes a DELETE request to delete an asset",
    "lineNumber": 102,
    "testTargets": [
      "Assets.deleteAsset"
    ]
  },
  {
    "__docId__": 207,
    "kind": "test",
    "name": "it77",
    "testId": 77,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe75.it77",
    "access": null,
    "description": "throws an error when an asset id is not given",
    "lineNumber": 108,
    "testTargets": [
      "Assets.deleteAsset"
    ]
  },
  {
    "__docId__": 208,
    "kind": "test",
    "name": "describe78",
    "testId": 78,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe78",
    "access": null,
    "description": "Assets.inputInfo",
    "lineNumber": 121,
    "testTargets": [
      "Assets.inputInfo"
    ]
  },
  {
    "__docId__": 209,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe78",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe78.it79",
    "access": null,
    "description": "makes a GET rquest to get input info for an asset",
    "lineNumber": 131,
    "testTargets": [
      "Assets.inputInfo"
    ]
  },
  {
    "__docId__": 210,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe78",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe78.it80",
    "access": null,
    "description": "throws an error when an asset id is not given",
    "lineNumber": 137,
    "testTargets": [
      "Assets.inputInfo"
    ]
  },
  {
    "__docId__": 211,
    "kind": "test",
    "name": "describe81",
    "testId": 81,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe81",
    "access": null,
    "description": "Assets.list",
    "lineNumber": 150,
    "testTargets": [
      "Assets.list"
    ]
  },
  {
    "__docId__": 212,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "test/unit/video/resources/assets.spec.js~describe64.describe81",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/assets.spec.js~describe64.describe81.it82",
    "access": null,
    "description": "makes a GET request to lists all assets for an environment",
    "lineNumber": 160,
    "testTargets": [
      "Assets.list"
    ]
  },
  {
    "__docId__": 213,
    "kind": "testFile",
    "name": "test/unit/video/resources/playbackIds.spec.js",
    "content": "const { expect } = require('chai');\nconst sinon = require('sinon');\nconst PlaybackIds = require('../../../../src/video/resources/playbackIds');\nconst api = require('../../../../src/utils/api');\n\n/** @test {PlaybackIds} */\ndescribe('Unit::PlaybackIds', () => {\n  const testApiKey = 'testApiKey';\n  const testSecret = 'testSecret';\n  const testPlaybackIds = new PlaybackIds(testApiKey, testSecret);\n\n  /** @test {PlaybackIds} */\n  describe('PlaybackIds', () => {\n    /** @test {PlaybackIds} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new PlaybackIds()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {PlaybackIds} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new PlaybackIds('testKey')).to.throw('API secret key must be provided');\n    });\n\n    /** @test {PlaybackIds} */\n    it('creates a new PlaybackIds instance', () => {\n      const TestPlaybackIds = new PlaybackIds(testApiKey, testSecret);\n      expect(() => new PlaybackIds(testApiKey, testSecret)).to.not.throw();\n      expect(TestPlaybackIds.requestOptions.auth.username).to.equal(testApiKey);\n      expect(TestPlaybackIds.requestOptions.auth.password).to.equal(testSecret);\n    });\n  });\n\n  /** @test {PlaybackIds.create} */\n  describe('PlaybackIds.create', () => {\n    before(() => {\n      sinon.stub(api, 'post');\n    });\n\n    after(() => {\n      api.post.restore();\n    });\n\n    /** @test {PlaybackIds.create} */\n    it('makes a POST request to create a playback ID', () => {\n      testPlaybackIds.create('assetid', { policy: 'public' });\n      expect(api.post.calledOnce);\n    });\n\n    /** @test {PlaybackIds.create} */\n    it('throws an error if an asset id is not given', () => (\n      testPlaybackIds.create()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to create a playback ID');\n        })\n    ));\n\n    /** @test {PlaybackIds.create} */\n    it('throws an error if playbackId params are not given', () => (\n      testPlaybackIds.create('assetid')\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('Playback ID params are required');\n        })\n    ));\n  });\n\n  /** @test {PlaybackIds.deletePlaybackId} */\n  describe('PlaybackIds.deletePlaybackId', () => {\n    before(() => {\n      sinon.stub(api, 'del');\n    });\n\n    after(() => {\n      api.del.restore();\n    });\n\n    /** @test {PlaybackIds.deletePlaybackId} */\n    it('makes a DELETE request to delete a playback ID', () => {\n      testPlaybackIds.deletePlaybackId('assetid', { policy: 'public' });\n      expect(api.del.calledOnce);\n    });\n\n    /** @test {PlaybackIds.deletePlaybackId} */\n    it('throws an error if an asset id is not given', () => (\n      testPlaybackIds.deletePlaybackId()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to delete a playback ID');\n        })\n    ));\n\n    /** @test {PlaybackIds.deletePlaybackId} */\n    it('throws an error if playbackId params are not given', () => (\n      testPlaybackIds.deletePlaybackId('assetid')\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('A playback ID is required to delete a playback ID');\n        })\n    ));\n  });\n\n  /** @test {PlaybackIds.get} */\n  describe('PlaybackIds.get', () => {\n    before(() => {\n      sinon.stub(api, 'get');\n    });\n\n    after(() => {\n      api.get.restore();\n    });\n\n    /** @test {PlaybackIds.get} */\n    it('makes a GET request to delete a playbackId', () => {\n      testPlaybackIds.get('assetid', 'playbackId');\n      expect(api.del.calledOnce);\n    });\n\n    /** @test {PlaybackIds.get} */\n    it('throws an error if an asset id is not given', () => (\n      testPlaybackIds.get()\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('An asset ID is required to get a playback ID');\n        })\n    ));\n\n    /** @test {PlaybackIds.get} */\n    it('throws an error if playbackId params are not given', () => (\n      testPlaybackIds.get('assetid')\n        .then((res) => {\n          expect(res).to.not.exist;\n        })\n        .catch((err) => {\n          expect(err).to.exist;\n          expect(err.message).to.equal('A playback ID is required to get a playback ID');\n        })\n    ));\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/video/resources/playbackIds.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "test",
    "name": "describe83",
    "testId": 83,
    "memberof": "test/unit/video/resources/playbackIds.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83",
    "access": null,
    "description": "Unit::PlaybackIds",
    "lineNumber": 7,
    "testTargets": [
      "PlaybackIds"
    ]
  },
  {
    "__docId__": 215,
    "kind": "test",
    "name": "describe84",
    "testId": 84,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84",
    "access": null,
    "description": "PlaybackIds",
    "lineNumber": 13,
    "testTargets": [
      "PlaybackIds"
    ]
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84.it85",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 15,
    "testTargets": [
      "PlaybackIds"
    ]
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84.it86",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 20,
    "testTargets": [
      "PlaybackIds"
    ]
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe84.it87",
    "access": null,
    "description": "creates a new PlaybackIds instance",
    "lineNumber": 25,
    "testTargets": [
      "PlaybackIds"
    ]
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "describe88",
    "testId": 88,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88",
    "access": null,
    "description": "PlaybackIds.create",
    "lineNumber": 34,
    "testTargets": [
      "PlaybackIds.create"
    ]
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it89",
    "testId": 89,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88.it89",
    "access": null,
    "description": "makes a POST request to create a playback ID",
    "lineNumber": 44,
    "testTargets": [
      "PlaybackIds.create"
    ]
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "it90",
    "testId": 90,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88.it90",
    "access": null,
    "description": "throws an error if an asset id is not given",
    "lineNumber": 50,
    "testTargets": [
      "PlaybackIds.create"
    ]
  },
  {
    "__docId__": 222,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe88.it91",
    "access": null,
    "description": "throws an error if playbackId params are not given",
    "lineNumber": 62,
    "testTargets": [
      "PlaybackIds.create"
    ]
  },
  {
    "__docId__": 223,
    "kind": "test",
    "name": "describe92",
    "testId": 92,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92",
    "access": null,
    "description": "PlaybackIds.deletePlaybackId",
    "lineNumber": 75,
    "testTargets": [
      "PlaybackIds.deletePlaybackId"
    ]
  },
  {
    "__docId__": 224,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92.it93",
    "access": null,
    "description": "makes a DELETE request to delete a playback ID",
    "lineNumber": 85,
    "testTargets": [
      "PlaybackIds.deletePlaybackId"
    ]
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "it94",
    "testId": 94,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92.it94",
    "access": null,
    "description": "throws an error if an asset id is not given",
    "lineNumber": 91,
    "testTargets": [
      "PlaybackIds.deletePlaybackId"
    ]
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe92.it95",
    "access": null,
    "description": "throws an error if playbackId params are not given",
    "lineNumber": 103,
    "testTargets": [
      "PlaybackIds.deletePlaybackId"
    ]
  },
  {
    "__docId__": 227,
    "kind": "test",
    "name": "describe96",
    "testId": 96,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96",
    "access": null,
    "description": "PlaybackIds.get",
    "lineNumber": 116,
    "testTargets": [
      "PlaybackIds.get"
    ]
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96.it97",
    "access": null,
    "description": "makes a GET request to delete a playbackId",
    "lineNumber": 126,
    "testTargets": [
      "PlaybackIds.get"
    ]
  },
  {
    "__docId__": 229,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96.it98",
    "access": null,
    "description": "throws an error if an asset id is not given",
    "lineNumber": 132,
    "testTargets": [
      "PlaybackIds.get"
    ]
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "it99",
    "testId": 99,
    "memberof": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/resources/playbackIds.spec.js~describe83.describe96.it99",
    "access": null,
    "description": "throws an error if playbackId params are not given",
    "lineNumber": 144,
    "testTargets": [
      "PlaybackIds.get"
    ]
  },
  {
    "__docId__": 231,
    "kind": "testFile",
    "name": "test/unit/video/video.spec.js",
    "content": "const { expect } = require('chai');\nconst Video = require('../../../src/video/video');\nconst Assets = require('../../../src/video/resources/assets');\nconst PlaybackIds = require('../../../src/video/resources/playbackIds');\n\n/** @test {Video} */\ndescribe('Unit::Video', () => {\n  const testApiKey = 'testApiKey';\n  const testSecret = 'testSecret';\n\n  /** @test {Video} */\n  describe('Video', () => {\n    /** @test {Video} */\n    it('throws an error if an api key is not given', () => {\n      expect(() => new Video()).to.throw('API Access Token must be provided.');\n    });\n\n    /** @test {Video} */\n    it('throws an error if a secret key is not given', () => {\n      expect(() => new Video('testKey')).to.throw('API secret key must be provided');\n    });\n\n    /** @test {Video} */\n    it('creates a new Video instance', () => {\n      const TestVideo = new Video(testApiKey, testSecret);\n      expect(() => new Video(testApiKey, testSecret)).to.not.throw();\n      expect(TestVideo.assets).to.be.an.instanceof(Assets);\n      expect(TestVideo.playbackIds).to.be.an.instanceof(PlaybackIds);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/JacquiManzi/Documents/Mux/mux-node-sdk/test/unit/video/video.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "test",
    "name": "describe100",
    "testId": 100,
    "memberof": "test/unit/video/video.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/unit/video/video.spec.js~describe100",
    "access": null,
    "description": "Unit::Video",
    "lineNumber": 7,
    "testTargets": [
      "Video"
    ]
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "describe101",
    "testId": 101,
    "memberof": "test/unit/video/video.spec.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/unit/video/video.spec.js~describe100.describe101",
    "access": null,
    "description": "Video",
    "lineNumber": 12,
    "testTargets": [
      "Video"
    ]
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "test/unit/video/video.spec.js~describe100.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/video.spec.js~describe100.describe101.it102",
    "access": null,
    "description": "throws an error if an api key is not given",
    "lineNumber": 14,
    "testTargets": [
      "Video"
    ]
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "test/unit/video/video.spec.js~describe100.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/video.spec.js~describe100.describe101.it103",
    "access": null,
    "description": "throws an error if a secret key is not given",
    "lineNumber": 19,
    "testTargets": [
      "Video"
    ]
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "test/unit/video/video.spec.js~describe100.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/unit/video/video.spec.js~describe100.describe101.it104",
    "access": null,
    "description": "creates a new Video instance",
    "lineNumber": 24,
    "testTargets": [
      "Video"
    ]
  }
]